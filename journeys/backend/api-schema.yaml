openapi: 3.0.0
info:
  version: 1.0.0
  title: Journey app backend
servers:
  - url: 'http://localhost:8000'
paths:
  '/supported_features':
    get:
      summary: Information about supported features
      operationId: get_supported_features
      tags:
        - '1. Before You Start'
      responses:
        '200':
          description: Supported feature list
          content:
            'application/json':
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      type: string
                    example:
                      - 'Trunk'
                      - 'Virtual Wire'
                      - 'Double Tagging'
                      - 'Compatibility Level'
                      - 'VLAN Groups'
  '/sessions':
    get:
      summary: Information about existing sessions
      operationId: get_sessions
      tags:
        - '2. Start/Resume'
      responses:
        '200':
          description: Sessions list
          content:
            'application/json':
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Session'
    post:
      summary: Create a new session
      operationId: create_session
      tags:
        - '2. Start/Resume'
      responses:
        '200':
          description: Session details
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/SessionDetails'
  '/sessions/{session_id}':
    summary: Information about given session
    get:
      summary: Get information about existing session
      operationId: get_session_details
      tags:
        - '2. Start/Resume'
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Session details
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/SessionDetails'
        '404':
          description: No session exists
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Error'
        default:
          $ref: '#/components/responses/UnexpectedError'
    delete:
      summary: Delete existing session
      operationId: delete_session
      tags:
        - '2. Start/Resume'
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Session deleted
        '404':
          description: No session exists
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Error'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/sessions/{session_id}/source':
    post:
      summary: Provide configuration_source
      operationId: provide_source
      tags:
        - '3. Source BIG-IP System'
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: UCS and Optional passphrase
        required: true
        content:
          'multipart/form-data':
            schema:
              type: object
              properties:
                ucs_file:
                  type: string
                  format: binary
                ucs_passphrase:
                  type: string
                as3_file:
                  type: string
                  format: binary
                username:
                  type: string
                password:
                  type: string
                  format: password
                host:
                  type: string
      responses:
        '200':
          description: Success
        '400':
          description: Cannot process uploaded file
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Given system does not exists
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Given credentials are not valid
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Error'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/sessions/{session_id}/conflicts_report':
    get:
      summary: Get conflicts report
      operationId: generate_conflicts_report
      tags:
        - '4. Configuration Analysis'
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Report about conflicts found in the configration
          content:
            'application/pdf':
              schema:
                type: string
                format: binary
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/sessions/{session_id}/resolve_automatically':
    post:
      summary: Resolve all remaining conflicts automatically using recommended solutions
      operationId: resolve_conflicts_automatically
      tags:
        - '5. Resolve Conflicts'
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/responses/Changes'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/sessions/{session_id}/current_conflict':
    post:
      summary: Set a conflict to resolve
      operationId: set_current_conflict
      tags:
       - '5. Resolve Conflicts'
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Conflict choosen to be resolve next
        required: true
        content:
          'application/json':
            schema:
              type: object
              required:
                - conflict_id
              properties:
                conflict_id:
                  type: string
      responses:
        '200':
          $ref: '#/components/responses/ConflictDetails'
        '404':
          description: Given conflict does not exist
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Error'
        default:
          $ref: '#/components/responses/UnexpectedError'
    delete:
      summary: Reverts setting current conflict
      operationId: clear_current_conflict
      tags:
        - '5. Resolve Conflicts'
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Current conflict cleared
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/sessions/{session_id}/files/{file_path}':
    put:
      summary: Provide updated file content
      operationId: post_file_change
      tags:
        - '5. Resolve Conflicts'
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: integer
        - name: file_path
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: New content of a file
        required: true
        content:
          'multipart/form-data':
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '202':
          description: Accepted
        default:
          $ref: '#/components/responses/UnexpectedError'
    get:
      summary: Get content of the file
      operationId: get_file_content
      tags:
        - '5. Resolve Conflicts'
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: integer
        - name: file_path
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File content
          content:
            'application/octet-stream':
              schema:
                type: object
                properties:
                  file:
                    type: string
                    format: binary
        '404':
          description: File does not exists
        default:
          $ref: '#/components/responses/UnexpectedError'
    delete:
      summary: Delete file
      operationId: delete_file
      tags:
        - '5. Resolve Conflicts'
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: integer
        - name: file_path
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File content
        '404':
          description: File does not exists
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/sessions/{session_id}/branches/{branch_name}/files/{file_path}':
    get:
      summary: Get content of the file from a given branch
      operationId: get_file_content_branch
      tags:
        - '5. Resolve Conflicts'
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: integer
        - name: branch_name
          in: path
          required: true
          schema:
            type: string
        - name: file_path
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File content
          content:
            'application/octet-stream':
              schema:
                type: object
                properties:
                  file:
                    type: string
                    format: binary
        '404':
          description: File does not exists
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/sessions/{session_id}/changes':
    post:
      summary: Provide content change
      operationId: post_change
      tags:
        - '5. Resolve Conflicts'
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          'application/json':
            schema:
              properties:
                message:
                  type: string
      responses:
        '200':
          $ref: '#/components/responses/Conflicts'
        '404':
          description: Given conflict does not exist
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Provided solution did not resolve the conflict
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ConflictDetails'
        default:
          $ref: '#/components/responses/UnexpectedError'
    get:
      summary: Get list of changes
      operationId: get_changes_list
      tags:
        - '6. Resolution Summary'
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/responses/Changes'
  '/sessions/{session_id}/changes/{change_id}':
    get:
      summary: Get the change details
      operationId: Get_change_details
      tags:
        - '6. Resolution Summary'
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: integer
        - name: change_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Change details
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ChangeDetails'
    delete:
      summary: Revert content change
      operationId: revert_change
      tags:
        - '6. Resolution Summary'
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: integer
        - name: change_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Conflicts'

  '/sessions/{session_id}/changes_report':
    get:
      summary: Get changes report
      operationId: generate_changes_report
      tags:
        - '6. Resolution Summary'
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Report about changes made in the configration
          content:
            'application/pdf':
              schema:
                type: string
                format: binary
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/sessions/{session_id}/output':
    get:
      summary: Get output UCS/AS3
      operationId: generate_output
      tags:
        - '7. Journey Summary'
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Output UCS
          content:
            'application/octet-stream':
              schema:
                type: string
                format: binary
  '/sessions/{session_id}/deployments/test_connection':
    post:
      summary: Test connection using credentials
      operationId: test_connection
      tags:
        - '8. Deployment'
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: System Credentials
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/SystemCredentials'
      responses:
        '200':
          description: OK
        '404':
          description: Given system does not exists
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Given credentials are not valid
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Error'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/supported_validators':
    get:
      summary: Get list of supported destination validators
      operationId: list_supported_validators
      tags:
        - '8. Deployment'
      responses:
        '200':
          description: List of supported deployment validators with the descriptions
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/SupportedValidators'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/sessions/{session_id}/deployments':
    post:
      summary: Deploy configuration to given system and validate the results
      operationId: start_deployment_operation
      tags:
        - '8. Deployment'
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Deployment configuration
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Deployment'
      responses:
        '202':
          description: Deployment operation has started
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Deployment'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/sessions/{session_id}/deployments/{deployment_id}':
    get:
      summary: Get status of deployment operation
      operationId: get_deployment_operation_status
      tags:
        - '9. Deployment Results'
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: integer
        - name: deployment_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Deployment operation status
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/DeploymentDetails'
        '404':
          description: Given deployment operation does not exist
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Error'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/sessions/{session_id}/deployments/{deployment_id}/log':
    get:
      summary: Get deployment operation's log file
      operationId: get_deployment_operation_log_file
      tags:
        - '9. Deployment Results'
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: integer
        - name: deployment_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Deployment operation log file
          content:
            'text/plain':
              schema:
                type: string
                format: binary
        '404':
          description: Given deployment operation does not exist
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Given deployment operation did not finish yet
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Error'
  '/sessions/{session_id}/deployments/{deployment_id}/report':
    get:
      summary: Get deployment report
      operationId: generate_deployment_report
      tags:
        - '9. Deployment Results'
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: integer
        - name: deployment_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Deployment report
          content:
            'application/pdf':
              schema:
                type: string
                format: binary
        '404':
          description: Given deployment operation does not exist
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Given deployment operation did not finish yet
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Error'
        default:
          $ref: '#/components/responses/UnexpectedError'
components:
  responses:
    Conflicts:
      description: List of (Remaining) Conflicts to resolve
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Conflict'
    Changes:
      description: List of changes made
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Changes'
    UnexpectedError:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ConflictDetails:
      description: Details of a conflict including mitigations
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConflictDetails'
  schemas:
    SystemCredentials:
      type: object
      required:
        - username
        - password
        - host
      properties:
        username:
          type: string
        password:
          type: string
          format: password
          writeOnly: true
        host:
          type: string
    File:
      type: object
      required:
        - path
        - url
      properties:
        path:
          type: string
          example: 'config/bigip.conf'
        url:
          type: string
          example: 'http://localhost/sessions/1/files/config/bigip.conf'
    Mitigation:
      type: object
      required:
        - name
        - files
      properties:
        name:
          type: string
          example: "SPDAG_delete_objects"
        files:
          type: array
          items:
            $ref: '#/components/schemas/File'
    Conflict:
      type: object
      required:
        - id
        - summary
      properties:
        id:
          type: string
          example: 'SPDAG'
        summary:
          type: string
          example: 'net vlan example_vlan: Value of field cmp hash is not supported on target platform'
        affected_objects:
          type: object
          additionalProperties:
            true
          items:
            type: string
          example:
            - 'net vlan /Common/vlan1': {
              file: "bigip_base.conf",
              comment: 'Value of field cmp-hash is not supported on target platform',
              object: 'net vlan /Common/vlan1 {\n    cmp-hash src-ip\n    tag 4094\n}'
              }
            - 'net vlan /Common/vlan2': {
              file: "bigip_base.conf",
              comment: 'Value of field cmp hash is not supported on target platform',
              object: 'net vlan /Common/vlan2 {\n    cmp-hash dst-ip\n    tag 4094\n}'
              }
    ConflictDetails:
      allOf:
        - $ref: '#/components/schemas/Conflict'
        - type: object
          required:
            - mitigations
          properties:
            files:
              type: array
              items:
                $ref: '#/components/schemas/File'
            mitigations:
              type: array
              items:
                $ref: '#/components/schemas/Mitigation'
    Change:
      type: object
      required:
        - id
        - message
        - url
      properties:
        id:
          type: string
        message:
          type: string
        url:
          type: string
          example: 'http://localhost/sessions/{session_id}/changes/{change_id}'
    ChangeDetails:
      allOf:
        - $ref: '#/components/schemas/Change'
        - type: object
          required:
            - content
          properties:
            content:
              type: string
              example: >
                diff --git a/journeys/backend/api-schema.yaml b/journeys/backend/api-schema.yaml
                index 98b8bbf..d298f8d 100644
                --- a/journeys/backend/api-schema.yaml
                +++ b/journeys/backend/api-schema.yaml
    SupportedValidators:
      type: object
      required:
        - validators
      properties:
        validators:
          type: array
          items:
            type: object
            required:
             - name
             - description
             - require_source
             - require_admin
            properties:
              name:
                type: string
              description:
                type: string
              require_source:
                type: boolean
              require_admin:
                type: boolean
    Source:
      type: object
      required:
       - has_ucs
       - has_as3
      properties:
        has_ucs:
          type: boolean
        has_as3:
          type: boolean
        credentials:
          $ref: '#/components/schemas/SystemCredentials'
    Conflicts:
      type: array
      items:
        $ref: '#/components/schemas/Conflict'
    Changes:
      type: array
      items:
        $ref: '#/components/schemas/Change'
    Deployment:
      type: object
      required:
        - destination
        - validators
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        url:
          type: string
          format: uri
        source:
          $ref: '#/components/schemas/SystemCredentials'
        destination:
          $ref: '#/components/schemas/SystemCredentials'
        validators:
          type: object
          additionalProperties: true
          example:
            'validator1': true
            'validator2': false
        status:
          type: string
          enum: ['in_progress', 'finished']
          readOnly: true
    DeploymentDetails:
      allOf:
        - $ref: '#/components/schemas/Deployment'
        - type: object
          properties:
            results:
              type: array
              items:
                type: object
                properties:
                  time:
                    type: integer
                  message:
                    type: string
                example:
                  time: 1234456
                  message: 'backup created'

    Session:
      type: object
      required:
        - last_update_time
        - session_id
        - url
      properties:
        last_update_time:
          type: integer
        session_id:
          type: integer
        url:
          type: string
          example: 'http://localhost/sessions/{session_id}'
    SessionDetails:
      allOf:
        - $ref: '#/components/schemas/Session'
        - type: object
          required:
            - source
            - conflicts
            - changes
          properties:
            source:
              $ref: '#/components/schemas/Source'
            conflicts:
              $ref: '#/components/schemas/Conflicts'
            current_conflict:
              nullable: true
              allOf:
                - $ref: '#/components/schemas/ConflictDetails'
            changes:
              $ref: '#/components/schemas/Changes'
            instructions:
              type: object
              properties:
                message:
                  type: string
            deployments:
              type: array
              items:
                $ref: '#/components/schemas/Deployment'

    Error:
      type: object
      required:
        - status
        - description
      properties:
        status:
          type: integer
        description:
          type: string

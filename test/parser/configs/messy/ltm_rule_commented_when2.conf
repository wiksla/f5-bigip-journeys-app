ltm rule /Common/iRule_campbells_AWS_80_v2.0 {
    when CLIENT_ACCEPTED {
	set IP::addr [getfield [IP::client_addr] "%" 1]
        set retries 0
}

when HTTP_REQUEST {
    if {not[class match [IP::client_addr] equals NETSTART_Allowed_IP]} {
           reject
    }
   	if {$static::debug} {log local0. "campbells_AWS_80- The URI was <[HTTP::uri]> "}

	switch -glob [HTTP::uri] {
		"/convenience/login*" -
		"/convenience/register*" {
    		  if {$static::debug} {log local0. "campbells_AWS_80- The URI was <[HTTP::uri]>
    		  Redirect to HTTPS " }
  		# pool Pool_AWSUS_hybris_b2b-prd-app_80
              HTTP::redirect https://[getfield [HTTP::host] ":" 1][HTTP::uri]
               # HTTP::respond 302 Location "https://[HTTP::host][HTTP::uri]"

		}
   		"/images/*" -
  		"/_ui/*" -
    		"/favicon.ico*" -
   		"/convenience*" -
   		"/medias/*"  {
                        pool Pool_AWSUS_hybris_b2b-prd-app_80
   			if {$static::debug} {log local0. "campbells_AWS_80- The URI was <[HTTP::uri]> -
   			Allowed client <$IP::addr> is now connecting to pool
   			<Pool_AWSUS_hybris_b2b-prd-app_80>" }
   		}
		"/ccc/*"  {
			#HTTP::redirect https://[HTTP::host][HTTP::uri]
                       pool Pool_ccc_landingpage_metwebdev09
			if {$static::debug} {log local0. "campbells_AWS_80- The URI was <[HTTP::uri]> -
			Allowed client <$IP::addr> is now connecting to pool <Pool_ccc_landingpage>" }
		}
                "/iga/*" {
		         HTTP::respond 302 Location "https://[HTTP::host][HTTP::uri]"
                }
		default {


                          pool Pool_campbells_125

           		if {$static::debug} {log local0. "campbells_AWS_80- The URI was <[HTTP::uri]> -
           		Allowed client <$IP::addr> is now connecting to pool
           		<Pool_AWSUS_hybris_b2b-prd-app_80>" }
   		}

    }
}

#when HTTP_RESPONSE {
# HTTP::header replace X-Frame-Options "SAMEORIGIN"
}
